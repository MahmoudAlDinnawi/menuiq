{"ast":null,"code":"var _jsxFileName = \"/Users/mahmouddinnawi/MenuSystem/frontend/src/components/CustomAllergenIcons.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomAllergenIcons = ({\n  allergens,\n  size = 'w-6 h-6',\n  showLabels = false,\n  language = 'en'\n}) => {\n  _s();\n  const [allergenIcons, setAllergenIcons] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchAllergenIcons();\n  }, []);\n  const fetchAllergenIcons = async () => {\n    try {\n      const response = await api.get('/api/allergen-icons');\n      // Convert array to object for easy lookup\n      const iconMap = {};\n      response.data.allergens.forEach(icon => {\n        iconMap[icon.name] = icon;\n      });\n      setAllergenIcons(iconMap);\n    } catch (error) {\n      console.error('Error fetching allergen icons:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading || !allergens || allergens.length === 0) {\n    return null;\n  }\n  const getDisplayName = icon => {\n    if (!icon) return '';\n    return language === 'ar' && icon.display_name_ar ? icon.display_name_ar : icon.display_name;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-wrap items-center gap-2\",\n    children: allergens.map(allergen => {\n      const icon = allergenIcons[allergen];\n      if (!icon) {\n        // Fallback if icon not found\n        return showLabels ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-500\",\n          children: allergen\n        }, allergen, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this) : null;\n      }\n      const iconUrl = `${process.env.REACT_APP_API_URL || 'http://localhost:8000'}${icon.icon_url}`;\n      return showLabels ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: iconUrl,\n          alt: getDisplayName(icon),\n          className: `${size} object-contain`,\n          title: getDisplayName(icon)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-700\",\n          children: getDisplayName(icon)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, allergen, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconUrl,\n        alt: getDisplayName(icon),\n        className: `${size} object-contain`,\n        title: getDisplayName(icon)\n      }, allergen, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomAllergenIcons, \"EadvydniaxB4h+qCt5CURLLGdAM=\");\n_c = CustomAllergenIcons;\nexport default CustomAllergenIcons;\nvar _c;\n$RefreshReg$(_c, \"CustomAllergenIcons\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","CustomAllergenIcons","allergens","size","showLabels","language","_s","allergenIcons","setAllergenIcons","loading","setLoading","fetchAllergenIcons","response","get","iconMap","data","forEach","icon","name","error","console","length","getDisplayName","display_name_ar","display_name","className","children","map","allergen","fileName","_jsxFileName","lineNumber","columnNumber","iconUrl","process","env","REACT_APP_API_URL","icon_url","src","alt","title","_c","$RefreshReg$"],"sources":["/Users/mahmouddinnawi/MenuSystem/frontend/src/components/CustomAllergenIcons.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from '../services/api';\n\nconst CustomAllergenIcons = ({ allergens, size = 'w-6 h-6', showLabels = false, language = 'en' }) => {\n  const [allergenIcons, setAllergenIcons] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchAllergenIcons();\n  }, []);\n\n  const fetchAllergenIcons = async () => {\n    try {\n      const response = await api.get('/api/allergen-icons');\n      // Convert array to object for easy lookup\n      const iconMap = {};\n      response.data.allergens.forEach(icon => {\n        iconMap[icon.name] = icon;\n      });\n      setAllergenIcons(iconMap);\n    } catch (error) {\n      console.error('Error fetching allergen icons:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading || !allergens || allergens.length === 0) {\n    return null;\n  }\n\n  const getDisplayName = (icon) => {\n    if (!icon) return '';\n    return language === 'ar' && icon.display_name_ar ? icon.display_name_ar : icon.display_name;\n  };\n\n  return (\n    <div className=\"flex flex-wrap items-center gap-2\">\n      {allergens.map((allergen) => {\n        const icon = allergenIcons[allergen];\n        \n        if (!icon) {\n          // Fallback if icon not found\n          return showLabels ? (\n            <span key={allergen} className=\"text-xs text-gray-500\">\n              {allergen}\n            </span>\n          ) : null;\n        }\n\n        const iconUrl = `${process.env.REACT_APP_API_URL || 'http://localhost:8000'}${icon.icon_url}`;\n        \n        return showLabels ? (\n          <div key={allergen} className=\"flex items-center gap-1\">\n            <img \n              src={iconUrl}\n              alt={getDisplayName(icon)}\n              className={`${size} object-contain`}\n              title={getDisplayName(icon)}\n            />\n            <span className=\"text-xs text-gray-700\">\n              {getDisplayName(icon)}\n            </span>\n          </div>\n        ) : (\n          <img \n            key={allergen}\n            src={iconUrl}\n            alt={getDisplayName(icon)}\n            className={`${size} object-contain`}\n            title={getDisplayName(icon)}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CustomAllergenIcons;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}