{"ast":null,"code":"var _jsxFileName = \"/Users/mahmouddinnawi/MenuSystem/frontend/src/components/MenuImportExport.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { menuAPI } from '../services/api';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenuImportExport = ({\n  categories,\n  onImportSuccess\n}) => {\n  _s();\n  const [importing, setImporting] = useState(false);\n  const [uploadFile, setUploadFile] = useState(null);\n  const [importErrors, setImportErrors] = useState([]);\n  const [importSuccess, setImportSuccess] = useState(false);\n\n  // Generate template data\n  const generateTemplate = () => {\n    const templateData = [\n    // Appetizers\n    {\n      name: 'Caesar Salad',\n      nameAr: 'سلطة سيزر',\n      category: 'appetizers',\n      price: '32 SAR',\n      priceWithoutVat: '28 SAR',\n      description: 'Fresh romaine lettuce with Caesar dressing, croutons, and parmesan cheese',\n      descriptionAr: 'خس روماني طازج مع صلصة سيزر والخبز المحمص وجبنة البارميزان',\n      calories: '280',\n      walkMinutes: '35',\n      runMinutes: '15',\n      preparationTime: '10',\n      servingSize: '200g',\n      halal: 'TRUE',\n      vegetarian: 'TRUE',\n      vegan: 'FALSE',\n      glutenFree: 'FALSE',\n      dairyFree: 'FALSE',\n      nutFree: 'TRUE',\n      highSodium: 'FALSE',\n      containsCaffeine: 'FALSE',\n      spicyLevel: '0',\n      allergens: 'dairy,gluten,eggs',\n      totalFat: '18',\n      saturatedFat: '4',\n      transFat: '0',\n      cholesterol: '25',\n      sodium: '380',\n      totalCarbs: '22',\n      dietaryFiber: '3',\n      sugars: '4',\n      protein: '8',\n      vitaminA: '45',\n      vitaminC: '35',\n      calcium: '15',\n      iron: '10'\n    }, {\n      name: 'French Onion Soup',\n      nameAr: 'شوربة البصل الفرنسية',\n      category: 'appetizers',\n      price: '28 SAR',\n      priceWithoutVat: '24 SAR',\n      description: 'Traditional French onion soup topped with melted cheese and croutons',\n      descriptionAr: 'شوربة البصل الفرنسية التقليدية مع الجبنة الذائبة والخبز المحمص',\n      calories: '320',\n      walkMinutes: '40',\n      runMinutes: '18',\n      preparationTime: '25',\n      servingSize: '300ml',\n      halal: 'TRUE',\n      vegetarian: 'TRUE',\n      vegan: 'FALSE',\n      glutenFree: 'FALSE',\n      dairyFree: 'FALSE',\n      nutFree: 'TRUE',\n      highSodium: 'TRUE',\n      containsCaffeine: 'FALSE',\n      spicyLevel: '0',\n      allergens: 'dairy,gluten',\n      totalFat: '15',\n      saturatedFat: '8',\n      transFat: '0',\n      cholesterol: '40',\n      sodium: '820',\n      totalCarbs: '28',\n      dietaryFiber: '3',\n      sugars: '8',\n      protein: '12',\n      vitaminA: '15',\n      vitaminC: '8',\n      calcium: '25',\n      iron: '6'\n    },\n    // Main Courses\n    {\n      name: 'Grilled Salmon',\n      nameAr: 'سلمون مشوي',\n      category: 'mains',\n      price: '85 SAR',\n      priceWithoutVat: '74 SAR',\n      description: 'Fresh Atlantic salmon grilled to perfection with lemon butter sauce',\n      descriptionAr: 'سلمون أطلسي طازج مشوي بإتقان مع صلصة الليمون والزبدة',\n      calories: '420',\n      walkMinutes: '55',\n      runMinutes: '25',\n      preparationTime: '20',\n      servingSize: '200g',\n      halal: 'TRUE',\n      vegetarian: 'FALSE',\n      vegan: 'FALSE',\n      glutenFree: 'TRUE',\n      dairyFree: 'FALSE',\n      nutFree: 'TRUE',\n      highSodium: 'FALSE',\n      containsCaffeine: 'FALSE',\n      spicyLevel: '0',\n      allergens: 'fish,dairy',\n      totalFat: '24',\n      saturatedFat: '6',\n      transFat: '0',\n      cholesterol: '95',\n      sodium: '380',\n      totalCarbs: '5',\n      dietaryFiber: '1',\n      sugars: '2',\n      protein: '48',\n      vitaminA: '8',\n      vitaminC: '25',\n      calcium: '4',\n      iron: '8'\n    }, {\n      name: 'Chicken Cordon Bleu',\n      nameAr: 'دجاج كوردون بلو',\n      category: 'mains',\n      price: '68 SAR',\n      priceWithoutVat: '59 SAR',\n      description: 'Breaded chicken breast stuffed with ham and Swiss cheese',\n      descriptionAr: 'صدر دجاج مقلي محشو بالجبنة السويسرية',\n      calories: '580',\n      walkMinutes: '75',\n      runMinutes: '35',\n      preparationTime: '30',\n      servingSize: '300g',\n      halal: 'TRUE',\n      vegetarian: 'FALSE',\n      vegan: 'FALSE',\n      glutenFree: 'FALSE',\n      dairyFree: 'FALSE',\n      nutFree: 'TRUE',\n      highSodium: 'TRUE',\n      containsCaffeine: 'FALSE',\n      spicyLevel: '0',\n      allergens: 'gluten,dairy,eggs',\n      totalFat: '32',\n      saturatedFat: '12',\n      transFat: '0',\n      cholesterol: '145',\n      sodium: '920',\n      totalCarbs: '28',\n      dietaryFiber: '2',\n      sugars: '3',\n      protein: '42',\n      vitaminA: '12',\n      vitaminC: '4',\n      calcium: '25',\n      iron: '15'\n    },\n    // Steaks\n    {\n      name: 'Entrecôte Steak',\n      nameAr: 'ستيك أنتريكوت',\n      category: 'steaks',\n      price: '145 SAR',\n      priceWithoutVat: '126 SAR',\n      description: 'Premium ribeye steak with our signature sauce and French fries',\n      descriptionAr: 'ستيك ريب آي ممتاز مع صلصتنا المميزة والبطاطس المقلية',\n      calories: '850',\n      walkMinutes: '110',\n      runMinutes: '50',\n      preparationTime: '25',\n      servingSize: '350g',\n      halal: 'TRUE',\n      vegetarian: 'FALSE',\n      vegan: 'FALSE',\n      glutenFree: 'TRUE',\n      dairyFree: 'FALSE',\n      nutFree: 'TRUE',\n      highSodium: 'FALSE',\n      containsCaffeine: 'FALSE',\n      spicyLevel: '1',\n      allergens: 'dairy',\n      totalFat: '48',\n      saturatedFat: '20',\n      transFat: '0',\n      cholesterol: '165',\n      sodium: '680',\n      totalCarbs: '42',\n      dietaryFiber: '4',\n      sugars: '3',\n      protein: '58',\n      vitaminA: '4',\n      vitaminC: '15',\n      calcium: '6',\n      iron: '35'\n    }, {\n      name: 'Filet Mignon',\n      nameAr: 'فيليه مينيون',\n      category: 'steaks',\n      price: '165 SAR',\n      priceWithoutVat: '143 SAR',\n      description: 'Tender beef tenderloin with mushroom sauce',\n      descriptionAr: 'لحم بقري طري مع صلصة الفطر',\n      calories: '680',\n      walkMinutes: '88',\n      runMinutes: '40',\n      preparationTime: '30',\n      servingSize: '250g',\n      halal: 'TRUE',\n      vegetarian: 'FALSE',\n      vegan: 'FALSE',\n      glutenFree: 'TRUE',\n      dairyFree: 'FALSE',\n      nutFree: 'TRUE',\n      highSodium: 'FALSE',\n      containsCaffeine: 'FALSE',\n      spicyLevel: '0',\n      allergens: 'dairy',\n      totalFat: '38',\n      saturatedFat: '15',\n      transFat: '0',\n      cholesterol: '135',\n      sodium: '520',\n      totalCarbs: '8',\n      dietaryFiber: '2',\n      sugars: '3',\n      protein: '62',\n      vitaminA: '2',\n      vitaminC: '0',\n      calcium: '4',\n      iron: '40'\n    },\n    // Desserts\n    {\n      name: 'Crème Brûlée',\n      nameAr: 'كريم بروليه',\n      category: 'desserts',\n      price: '32 SAR',\n      priceWithoutVat: '28 SAR',\n      description: 'Classic French vanilla custard with caramelized sugar top',\n      descriptionAr: 'كاسترد الفانيليا الفرنسي الكلاسيكي مع طبقة السكر المكرمل',\n      calories: '380',\n      walkMinutes: '49',\n      runMinutes: '22',\n      preparationTime: '15',\n      servingSize: '150g',\n      halal: 'TRUE',\n      vegetarian: 'TRUE',\n      vegan: 'FALSE',\n      glutenFree: 'TRUE',\n      dairyFree: 'FALSE',\n      nutFree: 'TRUE',\n      highSodium: 'FALSE',\n      containsCaffeine: 'FALSE',\n      spicyLevel: '0',\n      allergens: 'dairy,eggs',\n      totalFat: '28',\n      saturatedFat: '16',\n      transFat: '0',\n      cholesterol: '245',\n      sodium: '85',\n      totalCarbs: '28',\n      dietaryFiber: '0',\n      sugars: '26',\n      protein: '6',\n      vitaminA: '25',\n      vitaminC: '0',\n      calcium: '15',\n      iron: '4'\n    }, {\n      name: 'Chocolate Soufflé',\n      nameAr: 'سوفليه الشوكولاتة',\n      category: 'desserts',\n      price: '38 SAR',\n      priceWithoutVat: '33 SAR',\n      description: 'Warm chocolate soufflé with vanilla ice cream',\n      descriptionAr: 'سوفليه الشوكولاتة الدافئ مع آيس كريم الفانيليا',\n      calories: '450',\n      walkMinutes: '58',\n      runMinutes: '26',\n      preparationTime: '25',\n      servingSize: '180g',\n      halal: 'TRUE',\n      vegetarian: 'TRUE',\n      vegan: 'FALSE',\n      glutenFree: 'FALSE',\n      dairyFree: 'FALSE',\n      nutFree: 'FALSE',\n      highSodium: 'FALSE',\n      containsCaffeine: 'TRUE',\n      spicyLevel: '0',\n      allergens: 'dairy,eggs,gluten,nuts',\n      totalFat: '22',\n      saturatedFat: '13',\n      transFat: '0',\n      cholesterol: '185',\n      sodium: '125',\n      totalCarbs: '58',\n      dietaryFiber: '4',\n      sugars: '48',\n      protein: '9',\n      vitaminA: '15',\n      vitaminC: '0',\n      calcium: '12',\n      iron: '18'\n    },\n    // Beverages\n    {\n      name: 'Fresh Orange Juice',\n      nameAr: 'عصير برتقال طازج',\n      category: 'beverages',\n      price: '18 SAR',\n      priceWithoutVat: '16 SAR',\n      description: 'Freshly squeezed orange juice',\n      descriptionAr: 'عصير برتقال طازج',\n      calories: '120',\n      walkMinutes: '15',\n      runMinutes: '7',\n      preparationTime: '5',\n      servingSize: '300ml',\n      halal: 'TRUE',\n      vegetarian: 'TRUE',\n      vegan: 'TRUE',\n      glutenFree: 'TRUE',\n      dairyFree: 'TRUE',\n      nutFree: 'TRUE',\n      highSodium: 'FALSE',\n      containsCaffeine: 'FALSE',\n      spicyLevel: '0',\n      allergens: '',\n      totalFat: '0',\n      saturatedFat: '0',\n      transFat: '0',\n      cholesterol: '0',\n      sodium: '5',\n      totalCarbs: '28',\n      dietaryFiber: '1',\n      sugars: '24',\n      protein: '2',\n      vitaminA: '4',\n      vitaminC: '150',\n      calcium: '4',\n      iron: '2'\n    }, {\n      name: 'Cappuccino',\n      nameAr: 'كابتشينو',\n      category: 'beverages',\n      price: '22 SAR',\n      priceWithoutVat: '19 SAR',\n      description: 'Italian coffee with steamed milk foam',\n      descriptionAr: 'قهوة إيطالية مع رغوة الحليب',\n      calories: '90',\n      walkMinutes: '12',\n      runMinutes: '5',\n      preparationTime: '5',\n      servingSize: '180ml',\n      halal: 'TRUE',\n      vegetarian: 'TRUE',\n      vegan: 'FALSE',\n      glutenFree: 'TRUE',\n      dairyFree: 'FALSE',\n      nutFree: 'TRUE',\n      highSodium: 'FALSE',\n      containsCaffeine: 'TRUE',\n      spicyLevel: '0',\n      allergens: 'dairy',\n      totalFat: '3.5',\n      saturatedFat: '2',\n      transFat: '0',\n      cholesterol: '12',\n      sodium: '65',\n      totalCarbs: '9',\n      dietaryFiber: '0',\n      sugars: '8',\n      protein: '4',\n      vitaminA: '8',\n      vitaminC: '0',\n      calcium: '15',\n      iron: '0'\n    }];\n\n    // Create worksheet\n    const ws = XLSX.utils.json_to_sheet(templateData);\n\n    // Set column widths\n    const colWidths = [{\n      wch: 20\n    },\n    // name\n    {\n      wch: 20\n    },\n    // nameAr\n    {\n      wch: 15\n    },\n    // category\n    {\n      wch: 12\n    },\n    // price\n    {\n      wch: 15\n    },\n    // priceWithoutVat\n    {\n      wch: 40\n    },\n    // description\n    {\n      wch: 40\n    },\n    // descriptionAr\n    {\n      wch: 10\n    },\n    // calories\n    {\n      wch: 12\n    },\n    // walkMinutes\n    {\n      wch: 12\n    },\n    // runMinutes\n    {\n      wch: 15\n    },\n    // preparationTime\n    {\n      wch: 12\n    },\n    // servingSize\n    {\n      wch: 8\n    },\n    // halal\n    {\n      wch: 10\n    },\n    // vegetarian\n    {\n      wch: 8\n    },\n    // vegan\n    {\n      wch: 10\n    },\n    // glutenFree\n    {\n      wch: 10\n    },\n    // dairyFree\n    {\n      wch: 8\n    },\n    // nutFree\n    {\n      wch: 10\n    },\n    // highSodium\n    {\n      wch: 15\n    },\n    // containsCaffeine\n    {\n      wch: 10\n    },\n    // spicyLevel\n    {\n      wch: 20\n    },\n    // allergens\n    // Nutrition columns\n    {\n      wch: 10\n    },\n    // totalFat\n    {\n      wch: 12\n    },\n    // saturatedFat\n    {\n      wch: 10\n    },\n    // transFat\n    {\n      wch: 12\n    },\n    // cholesterol\n    {\n      wch: 10\n    },\n    // sodium\n    {\n      wch: 12\n    },\n    // totalCarbs\n    {\n      wch: 12\n    },\n    // dietaryFiber\n    {\n      wch: 10\n    },\n    // sugars\n    {\n      wch: 10\n    },\n    // protein\n    {\n      wch: 10\n    },\n    // vitaminA\n    {\n      wch: 10\n    },\n    // vitaminC\n    {\n      wch: 10\n    },\n    // calcium\n    {\n      wch: 8\n    } // iron\n    ];\n    ws['!cols'] = colWidths;\n\n    // Create workbook\n    const wb = XLSX.utils.book_new();\n\n    // Add instructions sheet\n    const instructions = [['MENU IMPORT TEMPLATE - ENTRECÔTE CAFÉ DE PARIS'], [''], ['INSTRUCTIONS:'], ['1. The \"Menu Template\" sheet contains 10 example items covering all categories'], ['2. You can modify these examples or add your own items below them'], ['3. Required fields: name, category, price, description, calories'], ['4. Delete any example rows you don\\'t want to import'], [''], ['FIELD GUIDELINES:'], ['• Name: Item name in English (required)'], ['• NameAr: Item name in Arabic (optional)'], ['• Category: Must be one of: ' + categories.map(c => c.value).join(', ')], ['• Price: Price with VAT in format \"XX SAR\" (required)'], ['• PriceWithoutVat: Price before VAT in format \"XX SAR\" (optional)'], ['• Description: Item description in English (required)'], ['• DescriptionAr: Item description in Arabic (optional)'], ['• Calories: Number only (required)'], ['• WalkMinutes / RunMinutes: Numbers only (optional)'], ['• ServingSize: e.g., \"250g\", \"300ml\", \"2 pieces\" (optional)'], ['• PreparationTime: Number in minutes (optional)'], [''], ['DIETARY FIELDS (Use TRUE or FALSE):'], ['• halal, vegetarian, vegan, glutenFree, dairyFree, nutFree'], ['• highSodium, containsCaffeine'], [''], ['OTHER FIELDS:'], ['• SpicyLevel: 0 (not spicy) to 3 (very spicy)'], ['• Allergens: Comma-separated list (e.g., \"dairy,gluten,nuts\")'], ['  Available allergens: gluten, dairy, eggs, fish, shellfish, nuts, peanuts,'], ['  soy, sesame, celery, mustard, lupin, molluscs, sulphites'], [''], ['NUTRITION LABEL (All optional - leave blank if not available):'], ['• Fats: totalFat, saturatedFat, transFat (in grams)'], ['• Other: cholesterol (mg), sodium (mg), protein (g)'], ['• Carbs: totalCarbs, dietaryFiber, sugars (in grams)'], ['• Vitamins: vitaminA, vitaminC, calcium, iron (% daily value, 0-100)'], [''], ['TIPS:'], ['• Keep the header row intact'], ['• Don\\'t change column names'], ['• You can copy/paste from your existing menu data'], ['• Save as .xlsx before uploading']];\n    const wsInstructions = XLSX.utils.aoa_to_sheet(instructions);\n\n    // Add sheets to workbook\n    XLSX.utils.book_append_sheet(wb, wsInstructions, \"Instructions\");\n    XLSX.utils.book_append_sheet(wb, ws, \"Menu Template\");\n\n    // Download file\n    XLSX.writeFile(wb, 'menu_import_template.xlsx');\n  };\n\n  // Parse boolean values\n  const parseBoolean = value => {\n    if (typeof value === 'boolean') return value;\n    if (typeof value === 'string') {\n      return value.toUpperCase() === 'TRUE' || value === '1' || value.toUpperCase() === 'YES';\n    }\n    return false;\n  };\n\n  // Parse numeric values\n  const parseNumber = (value, isFloat = false) => {\n    if (value === '' || value === null || value === undefined) return null;\n    const num = isFloat ? parseFloat(value) : parseInt(value);\n    return isNaN(num) ? null : num;\n  };\n\n  // Process imported data\n  const processImportData = data => {\n    const errors = [];\n    const validItems = [];\n    data.forEach((row, index) => {\n      try {\n        // Skip empty rows\n        if (!row.name || !row.category || !row.price || !row.description) {\n          if (row.name || row.category || row.price || row.description) {\n            errors.push(`Row ${index + 2}: Missing required fields`);\n          }\n          return;\n        }\n\n        // Validate category\n        const validCategories = categories.map(c => c.value);\n        if (!validCategories.includes(row.category)) {\n          errors.push(`Row ${index + 2}: Invalid category \"${row.category}\"`);\n          return;\n        }\n\n        // Parse allergens\n        const allergens = row.allergens ? row.allergens.split(',').map(a => a.trim()).filter(a => a) : [];\n\n        // Create item object\n        const item = {\n          name: row.name,\n          nameAr: row.nameAr || '',\n          category: row.category,\n          price: row.price,\n          priceWithoutVat: row.priceWithoutVat || '',\n          description: row.description,\n          descriptionAr: row.descriptionAr || '',\n          calories: parseNumber(row.calories) || 0,\n          walkMinutes: parseNumber(row.walkMinutes),\n          runMinutes: parseNumber(row.runMinutes),\n          preparationTime: parseNumber(row.preparationTime),\n          servingSize: row.servingSize || '',\n          halal: parseBoolean(row.halal),\n          vegetarian: parseBoolean(row.vegetarian),\n          vegan: parseBoolean(row.vegan),\n          glutenFree: parseBoolean(row.glutenFree),\n          dairyFree: parseBoolean(row.dairyFree),\n          nutFree: parseBoolean(row.nutFree),\n          highSodium: parseBoolean(row.highSodium),\n          containsCaffeine: parseBoolean(row.containsCaffeine),\n          spicyLevel: parseNumber(row.spicyLevel) || 0,\n          allergens: allergens,\n          // Nutrition fields\n          totalFat: parseNumber(row.totalFat, true),\n          saturatedFat: parseNumber(row.saturatedFat, true),\n          transFat: parseNumber(row.transFat, true),\n          cholesterol: parseNumber(row.cholesterol),\n          sodium: parseNumber(row.sodium),\n          totalCarbs: parseNumber(row.totalCarbs, true),\n          dietaryFiber: parseNumber(row.dietaryFiber, true),\n          sugars: parseNumber(row.sugars, true),\n          protein: parseNumber(row.protein, true),\n          vitaminA: parseNumber(row.vitaminA),\n          vitaminC: parseNumber(row.vitaminC),\n          calcium: parseNumber(row.calcium),\n          iron: parseNumber(row.iron)\n        };\n        validItems.push(item);\n      } catch (error) {\n        errors.push(`Row ${index + 2}: ${error.message}`);\n      }\n    });\n    return {\n      validItems,\n      errors\n    };\n  };\n\n  // Handle file upload\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setUploadFile(file);\n      setImportErrors([]);\n      setImportSuccess(false);\n    }\n  };\n\n  // Handle import\n  const handleImport = async () => {\n    if (!uploadFile) return;\n    setImporting(true);\n    setImportErrors([]);\n    setImportSuccess(false);\n    try {\n      const reader = new FileReader();\n      reader.onload = async e => {\n        try {\n          const data = new Uint8Array(e.target.result);\n          const workbook = XLSX.read(data, {\n            type: 'array'\n          });\n\n          // Get the first sheet (or \"Menu Template\" sheet if it exists)\n          const sheetName = workbook.SheetNames.includes('Menu Template') ? 'Menu Template' : workbook.SheetNames[0];\n          const worksheet = workbook.Sheets[sheetName];\n\n          // Convert to JSON\n          const jsonData = XLSX.utils.sheet_to_json(worksheet);\n          if (jsonData.length === 0) {\n            setImportErrors(['No data found in the file']);\n            setImporting(false);\n            return;\n          }\n\n          // Process and validate data\n          const {\n            validItems,\n            errors\n          } = processImportData(jsonData);\n          if (errors.length > 0) {\n            setImportErrors(errors);\n          }\n          if (validItems.length > 0) {\n            // Import valid items using bulk API\n            try {\n              const response = await menuAPI.bulkCreateMenuItems(validItems);\n              if (response.success && response.count > 0) {\n                setImportSuccess(true);\n                onImportSuccess();\n\n                // Reset form after success\n                setTimeout(() => {\n                  setUploadFile(null);\n                  setImportSuccess(false);\n                  const fileInput = document.querySelector('input[type=\"file\"]');\n                  if (fileInput) {\n                    fileInput.value = '';\n                  }\n                }, 3000);\n              }\n            } catch (error) {\n              setImportErrors(prev => {\n                var _error$response, _error$response$data;\n                return [...prev, `Bulk import failed: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message}`];\n              });\n            }\n          } else if (errors.length === 0) {\n            setImportErrors(['No valid items found to import']);\n          }\n        } catch (error) {\n          setImportErrors([`Failed to read file: ${error.message}`]);\n        } finally {\n          setImporting(false);\n        }\n      };\n      reader.readAsArrayBuffer(uploadFile);\n    } catch (error) {\n      setImportErrors([`Upload failed: ${error.message}`]);\n      setImporting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-xl p-6 shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-playfair font-bold text-primary mb-6\",\n      children: \"Import/Export Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-3\",\n        children: \"Step 1: Download Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-4\",\n        children: \"Download the Excel template with all required fields and instructions.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateTemplate,\n        className: \"flex items-center gap-2 px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary-dark transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-5 h-5\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 11\n        }, this), \"Download Template\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-3\",\n        children: \"Step 2: Upload Filled Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-4\",\n        children: \"Fill the template with your menu items and upload it here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".xlsx,.xls,.csv\",\n          onChange: handleFileUpload,\n          className: \"flex-1 px-4 py-2 border-2 border-gray-200 rounded-lg focus:border-primary focus:outline-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleImport,\n          disabled: !uploadFile || importing,\n          className: `px-4 py-2 rounded-lg transition-colors ${uploadFile && !importing ? 'bg-green-600 text-white hover:bg-green-700' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`,\n          children: importing ? 'Importing...' : 'Import'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 7\n    }, this), importSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-50 border border-green-200 rounded-lg p-4 mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-700 font-medium\",\n        children: \"\\u2705 Menu items imported successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 9\n    }, this), importErrors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-50 border border-red-200 rounded-lg p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-700 font-medium mb-2\",\n        children: \"Import Errors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc list-inside text-sm text-red-600 space-y-1\",\n        children: importErrors.map((error, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: error\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 p-4 bg-gray-50 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-semibold mb-2\",\n        children: \"Quick Guide:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"text-sm text-gray-600 space-y-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Required fields: name, category, price, description, calories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\u2022 Categories: \", categories.map(c => c.value).join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Boolean fields: Use TRUE/FALSE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Allergens: Comma-separated (e.g., dairy,nuts,gluten)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Nutrition fields are optional\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 671,\n    columnNumber: 5\n  }, this);\n};\n_s(MenuImportExport, \"SpKxbjKa5MYRQ9qSUq/kApshC6o=\");\n_c = MenuImportExport;\nexport default MenuImportExport;\nvar _c;\n$RefreshReg$(_c, \"MenuImportExport\");","map":{"version":3,"names":["React","useState","menuAPI","XLSX","jsxDEV","_jsxDEV","MenuImportExport","categories","onImportSuccess","_s","importing","setImporting","uploadFile","setUploadFile","importErrors","setImportErrors","importSuccess","setImportSuccess","generateTemplate","templateData","name","nameAr","category","price","priceWithoutVat","description","descriptionAr","calories","walkMinutes","runMinutes","preparationTime","servingSize","halal","vegetarian","vegan","glutenFree","dairyFree","nutFree","highSodium","containsCaffeine","spicyLevel","allergens","totalFat","saturatedFat","transFat","cholesterol","sodium","totalCarbs","dietaryFiber","sugars","protein","vitaminA","vitaminC","calcium","iron","ws","utils","json_to_sheet","colWidths","wch","wb","book_new","instructions","map","c","value","join","wsInstructions","aoa_to_sheet","book_append_sheet","writeFile","parseBoolean","toUpperCase","parseNumber","isFloat","undefined","num","parseFloat","parseInt","isNaN","processImportData","data","errors","validItems","forEach","row","index","push","validCategories","includes","split","a","trim","filter","item","error","message","handleFileUpload","e","file","target","files","handleImport","reader","FileReader","onload","Uint8Array","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","jsonData","sheet_to_json","length","response","bulkCreateMenuItems","success","count","setTimeout","fileInput","document","querySelector","prev","_error$response","_error$response$data","detail","readAsArrayBuffer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","accept","onChange","disabled","_c","$RefreshReg$"],"sources":["/Users/mahmouddinnawi/MenuSystem/frontend/src/components/MenuImportExport.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { menuAPI } from '../services/api';\nimport * as XLSX from 'xlsx';\n\nconst MenuImportExport = ({ categories, onImportSuccess }) => {\n  const [importing, setImporting] = useState(false);\n  const [uploadFile, setUploadFile] = useState(null);\n  const [importErrors, setImportErrors] = useState([]);\n  const [importSuccess, setImportSuccess] = useState(false);\n\n  // Generate template data\n  const generateTemplate = () => {\n    const templateData = [\n      // Appetizers\n      {\n        name: 'Caesar Salad',\n        nameAr: 'سلطة سيزر',\n        category: 'appetizers',\n        price: '32 SAR',\n        priceWithoutVat: '28 SAR',\n        description: 'Fresh romaine lettuce with Caesar dressing, croutons, and parmesan cheese',\n        descriptionAr: 'خس روماني طازج مع صلصة سيزر والخبز المحمص وجبنة البارميزان',\n        calories: '280',\n        walkMinutes: '35',\n        runMinutes: '15',\n        preparationTime: '10',\n        servingSize: '200g',\n        halal: 'TRUE',\n        vegetarian: 'TRUE',\n        vegan: 'FALSE',\n        glutenFree: 'FALSE',\n        dairyFree: 'FALSE',\n        nutFree: 'TRUE',\n        highSodium: 'FALSE',\n        containsCaffeine: 'FALSE',\n        spicyLevel: '0',\n        allergens: 'dairy,gluten,eggs',\n        totalFat: '18',\n        saturatedFat: '4',\n        transFat: '0',\n        cholesterol: '25',\n        sodium: '380',\n        totalCarbs: '22',\n        dietaryFiber: '3',\n        sugars: '4',\n        protein: '8',\n        vitaminA: '45',\n        vitaminC: '35',\n        calcium: '15',\n        iron: '10'\n      },\n      {\n        name: 'French Onion Soup',\n        nameAr: 'شوربة البصل الفرنسية',\n        category: 'appetizers',\n        price: '28 SAR',\n        priceWithoutVat: '24 SAR',\n        description: 'Traditional French onion soup topped with melted cheese and croutons',\n        descriptionAr: 'شوربة البصل الفرنسية التقليدية مع الجبنة الذائبة والخبز المحمص',\n        calories: '320',\n        walkMinutes: '40',\n        runMinutes: '18',\n        preparationTime: '25',\n        servingSize: '300ml',\n        halal: 'TRUE',\n        vegetarian: 'TRUE',\n        vegan: 'FALSE',\n        glutenFree: 'FALSE',\n        dairyFree: 'FALSE',\n        nutFree: 'TRUE',\n        highSodium: 'TRUE',\n        containsCaffeine: 'FALSE',\n        spicyLevel: '0',\n        allergens: 'dairy,gluten',\n        totalFat: '15',\n        saturatedFat: '8',\n        transFat: '0',\n        cholesterol: '40',\n        sodium: '820',\n        totalCarbs: '28',\n        dietaryFiber: '3',\n        sugars: '8',\n        protein: '12',\n        vitaminA: '15',\n        vitaminC: '8',\n        calcium: '25',\n        iron: '6'\n      },\n      // Main Courses\n      {\n        name: 'Grilled Salmon',\n        nameAr: 'سلمون مشوي',\n        category: 'mains',\n        price: '85 SAR',\n        priceWithoutVat: '74 SAR',\n        description: 'Fresh Atlantic salmon grilled to perfection with lemon butter sauce',\n        descriptionAr: 'سلمون أطلسي طازج مشوي بإتقان مع صلصة الليمون والزبدة',\n        calories: '420',\n        walkMinutes: '55',\n        runMinutes: '25',\n        preparationTime: '20',\n        servingSize: '200g',\n        halal: 'TRUE',\n        vegetarian: 'FALSE',\n        vegan: 'FALSE',\n        glutenFree: 'TRUE',\n        dairyFree: 'FALSE',\n        nutFree: 'TRUE',\n        highSodium: 'FALSE',\n        containsCaffeine: 'FALSE',\n        spicyLevel: '0',\n        allergens: 'fish,dairy',\n        totalFat: '24',\n        saturatedFat: '6',\n        transFat: '0',\n        cholesterol: '95',\n        sodium: '380',\n        totalCarbs: '5',\n        dietaryFiber: '1',\n        sugars: '2',\n        protein: '48',\n        vitaminA: '8',\n        vitaminC: '25',\n        calcium: '4',\n        iron: '8'\n      },\n      {\n        name: 'Chicken Cordon Bleu',\n        nameAr: 'دجاج كوردون بلو',\n        category: 'mains',\n        price: '68 SAR',\n        priceWithoutVat: '59 SAR',\n        description: 'Breaded chicken breast stuffed with ham and Swiss cheese',\n        descriptionAr: 'صدر دجاج مقلي محشو بالجبنة السويسرية',\n        calories: '580',\n        walkMinutes: '75',\n        runMinutes: '35',\n        preparationTime: '30',\n        servingSize: '300g',\n        halal: 'TRUE',\n        vegetarian: 'FALSE',\n        vegan: 'FALSE',\n        glutenFree: 'FALSE',\n        dairyFree: 'FALSE',\n        nutFree: 'TRUE',\n        highSodium: 'TRUE',\n        containsCaffeine: 'FALSE',\n        spicyLevel: '0',\n        allergens: 'gluten,dairy,eggs',\n        totalFat: '32',\n        saturatedFat: '12',\n        transFat: '0',\n        cholesterol: '145',\n        sodium: '920',\n        totalCarbs: '28',\n        dietaryFiber: '2',\n        sugars: '3',\n        protein: '42',\n        vitaminA: '12',\n        vitaminC: '4',\n        calcium: '25',\n        iron: '15'\n      },\n      // Steaks\n      {\n        name: 'Entrecôte Steak',\n        nameAr: 'ستيك أنتريكوت',\n        category: 'steaks',\n        price: '145 SAR',\n        priceWithoutVat: '126 SAR',\n        description: 'Premium ribeye steak with our signature sauce and French fries',\n        descriptionAr: 'ستيك ريب آي ممتاز مع صلصتنا المميزة والبطاطس المقلية',\n        calories: '850',\n        walkMinutes: '110',\n        runMinutes: '50',\n        preparationTime: '25',\n        servingSize: '350g',\n        halal: 'TRUE',\n        vegetarian: 'FALSE',\n        vegan: 'FALSE',\n        glutenFree: 'TRUE',\n        dairyFree: 'FALSE',\n        nutFree: 'TRUE',\n        highSodium: 'FALSE',\n        containsCaffeine: 'FALSE',\n        spicyLevel: '1',\n        allergens: 'dairy',\n        totalFat: '48',\n        saturatedFat: '20',\n        transFat: '0',\n        cholesterol: '165',\n        sodium: '680',\n        totalCarbs: '42',\n        dietaryFiber: '4',\n        sugars: '3',\n        protein: '58',\n        vitaminA: '4',\n        vitaminC: '15',\n        calcium: '6',\n        iron: '35'\n      },\n      {\n        name: 'Filet Mignon',\n        nameAr: 'فيليه مينيون',\n        category: 'steaks',\n        price: '165 SAR',\n        priceWithoutVat: '143 SAR',\n        description: 'Tender beef tenderloin with mushroom sauce',\n        descriptionAr: 'لحم بقري طري مع صلصة الفطر',\n        calories: '680',\n        walkMinutes: '88',\n        runMinutes: '40',\n        preparationTime: '30',\n        servingSize: '250g',\n        halal: 'TRUE',\n        vegetarian: 'FALSE',\n        vegan: 'FALSE',\n        glutenFree: 'TRUE',\n        dairyFree: 'FALSE',\n        nutFree: 'TRUE',\n        highSodium: 'FALSE',\n        containsCaffeine: 'FALSE',\n        spicyLevel: '0',\n        allergens: 'dairy',\n        totalFat: '38',\n        saturatedFat: '15',\n        transFat: '0',\n        cholesterol: '135',\n        sodium: '520',\n        totalCarbs: '8',\n        dietaryFiber: '2',\n        sugars: '3',\n        protein: '62',\n        vitaminA: '2',\n        vitaminC: '0',\n        calcium: '4',\n        iron: '40'\n      },\n      // Desserts\n      {\n        name: 'Crème Brûlée',\n        nameAr: 'كريم بروليه',\n        category: 'desserts',\n        price: '32 SAR',\n        priceWithoutVat: '28 SAR',\n        description: 'Classic French vanilla custard with caramelized sugar top',\n        descriptionAr: 'كاسترد الفانيليا الفرنسي الكلاسيكي مع طبقة السكر المكرمل',\n        calories: '380',\n        walkMinutes: '49',\n        runMinutes: '22',\n        preparationTime: '15',\n        servingSize: '150g',\n        halal: 'TRUE',\n        vegetarian: 'TRUE',\n        vegan: 'FALSE',\n        glutenFree: 'TRUE',\n        dairyFree: 'FALSE',\n        nutFree: 'TRUE',\n        highSodium: 'FALSE',\n        containsCaffeine: 'FALSE',\n        spicyLevel: '0',\n        allergens: 'dairy,eggs',\n        totalFat: '28',\n        saturatedFat: '16',\n        transFat: '0',\n        cholesterol: '245',\n        sodium: '85',\n        totalCarbs: '28',\n        dietaryFiber: '0',\n        sugars: '26',\n        protein: '6',\n        vitaminA: '25',\n        vitaminC: '0',\n        calcium: '15',\n        iron: '4'\n      },\n      {\n        name: 'Chocolate Soufflé',\n        nameAr: 'سوفليه الشوكولاتة',\n        category: 'desserts',\n        price: '38 SAR',\n        priceWithoutVat: '33 SAR',\n        description: 'Warm chocolate soufflé with vanilla ice cream',\n        descriptionAr: 'سوفليه الشوكولاتة الدافئ مع آيس كريم الفانيليا',\n        calories: '450',\n        walkMinutes: '58',\n        runMinutes: '26',\n        preparationTime: '25',\n        servingSize: '180g',\n        halal: 'TRUE',\n        vegetarian: 'TRUE',\n        vegan: 'FALSE',\n        glutenFree: 'FALSE',\n        dairyFree: 'FALSE',\n        nutFree: 'FALSE',\n        highSodium: 'FALSE',\n        containsCaffeine: 'TRUE',\n        spicyLevel: '0',\n        allergens: 'dairy,eggs,gluten,nuts',\n        totalFat: '22',\n        saturatedFat: '13',\n        transFat: '0',\n        cholesterol: '185',\n        sodium: '125',\n        totalCarbs: '58',\n        dietaryFiber: '4',\n        sugars: '48',\n        protein: '9',\n        vitaminA: '15',\n        vitaminC: '0',\n        calcium: '12',\n        iron: '18'\n      },\n      // Beverages\n      {\n        name: 'Fresh Orange Juice',\n        nameAr: 'عصير برتقال طازج',\n        category: 'beverages',\n        price: '18 SAR',\n        priceWithoutVat: '16 SAR',\n        description: 'Freshly squeezed orange juice',\n        descriptionAr: 'عصير برتقال طازج',\n        calories: '120',\n        walkMinutes: '15',\n        runMinutes: '7',\n        preparationTime: '5',\n        servingSize: '300ml',\n        halal: 'TRUE',\n        vegetarian: 'TRUE',\n        vegan: 'TRUE',\n        glutenFree: 'TRUE',\n        dairyFree: 'TRUE',\n        nutFree: 'TRUE',\n        highSodium: 'FALSE',\n        containsCaffeine: 'FALSE',\n        spicyLevel: '0',\n        allergens: '',\n        totalFat: '0',\n        saturatedFat: '0',\n        transFat: '0',\n        cholesterol: '0',\n        sodium: '5',\n        totalCarbs: '28',\n        dietaryFiber: '1',\n        sugars: '24',\n        protein: '2',\n        vitaminA: '4',\n        vitaminC: '150',\n        calcium: '4',\n        iron: '2'\n      },\n      {\n        name: 'Cappuccino',\n        nameAr: 'كابتشينو',\n        category: 'beverages',\n        price: '22 SAR',\n        priceWithoutVat: '19 SAR',\n        description: 'Italian coffee with steamed milk foam',\n        descriptionAr: 'قهوة إيطالية مع رغوة الحليب',\n        calories: '90',\n        walkMinutes: '12',\n        runMinutes: '5',\n        preparationTime: '5',\n        servingSize: '180ml',\n        halal: 'TRUE',\n        vegetarian: 'TRUE',\n        vegan: 'FALSE',\n        glutenFree: 'TRUE',\n        dairyFree: 'FALSE',\n        nutFree: 'TRUE',\n        highSodium: 'FALSE',\n        containsCaffeine: 'TRUE',\n        spicyLevel: '0',\n        allergens: 'dairy',\n        totalFat: '3.5',\n        saturatedFat: '2',\n        transFat: '0',\n        cholesterol: '12',\n        sodium: '65',\n        totalCarbs: '9',\n        dietaryFiber: '0',\n        sugars: '8',\n        protein: '4',\n        vitaminA: '8',\n        vitaminC: '0',\n        calcium: '15',\n        iron: '0'\n      }\n    ];\n\n    // Create worksheet\n    const ws = XLSX.utils.json_to_sheet(templateData);\n    \n    // Set column widths\n    const colWidths = [\n      { wch: 20 }, // name\n      { wch: 20 }, // nameAr\n      { wch: 15 }, // category\n      { wch: 12 }, // price\n      { wch: 15 }, // priceWithoutVat\n      { wch: 40 }, // description\n      { wch: 40 }, // descriptionAr\n      { wch: 10 }, // calories\n      { wch: 12 }, // walkMinutes\n      { wch: 12 }, // runMinutes\n      { wch: 15 }, // preparationTime\n      { wch: 12 }, // servingSize\n      { wch: 8 },  // halal\n      { wch: 10 }, // vegetarian\n      { wch: 8 },  // vegan\n      { wch: 10 }, // glutenFree\n      { wch: 10 }, // dairyFree\n      { wch: 8 },  // nutFree\n      { wch: 10 }, // highSodium\n      { wch: 15 }, // containsCaffeine\n      { wch: 10 }, // spicyLevel\n      { wch: 20 }, // allergens\n      // Nutrition columns\n      { wch: 10 }, // totalFat\n      { wch: 12 }, // saturatedFat\n      { wch: 10 }, // transFat\n      { wch: 12 }, // cholesterol\n      { wch: 10 }, // sodium\n      { wch: 12 }, // totalCarbs\n      { wch: 12 }, // dietaryFiber\n      { wch: 10 }, // sugars\n      { wch: 10 }, // protein\n      { wch: 10 }, // vitaminA\n      { wch: 10 }, // vitaminC\n      { wch: 10 }, // calcium\n      { wch: 8 }   // iron\n    ];\n    ws['!cols'] = colWidths;\n\n    // Create workbook\n    const wb = XLSX.utils.book_new();\n    \n    // Add instructions sheet\n    const instructions = [\n      ['MENU IMPORT TEMPLATE - ENTRECÔTE CAFÉ DE PARIS'],\n      [''],\n      ['INSTRUCTIONS:'],\n      ['1. The \"Menu Template\" sheet contains 10 example items covering all categories'],\n      ['2. You can modify these examples or add your own items below them'],\n      ['3. Required fields: name, category, price, description, calories'],\n      ['4. Delete any example rows you don\\'t want to import'],\n      [''],\n      ['FIELD GUIDELINES:'],\n      ['• Name: Item name in English (required)'],\n      ['• NameAr: Item name in Arabic (optional)'],\n      ['• Category: Must be one of: ' + categories.map(c => c.value).join(', ')],\n      ['• Price: Price with VAT in format \"XX SAR\" (required)'],\n      ['• PriceWithoutVat: Price before VAT in format \"XX SAR\" (optional)'],\n      ['• Description: Item description in English (required)'],\n      ['• DescriptionAr: Item description in Arabic (optional)'],\n      ['• Calories: Number only (required)'],\n      ['• WalkMinutes / RunMinutes: Numbers only (optional)'],\n      ['• ServingSize: e.g., \"250g\", \"300ml\", \"2 pieces\" (optional)'],\n      ['• PreparationTime: Number in minutes (optional)'],\n      [''],\n      ['DIETARY FIELDS (Use TRUE or FALSE):'],\n      ['• halal, vegetarian, vegan, glutenFree, dairyFree, nutFree'],\n      ['• highSodium, containsCaffeine'],\n      [''],\n      ['OTHER FIELDS:'],\n      ['• SpicyLevel: 0 (not spicy) to 3 (very spicy)'],\n      ['• Allergens: Comma-separated list (e.g., \"dairy,gluten,nuts\")'],\n      ['  Available allergens: gluten, dairy, eggs, fish, shellfish, nuts, peanuts,'],\n      ['  soy, sesame, celery, mustard, lupin, molluscs, sulphites'],\n      [''],\n      ['NUTRITION LABEL (All optional - leave blank if not available):'],\n      ['• Fats: totalFat, saturatedFat, transFat (in grams)'],\n      ['• Other: cholesterol (mg), sodium (mg), protein (g)'],\n      ['• Carbs: totalCarbs, dietaryFiber, sugars (in grams)'],\n      ['• Vitamins: vitaminA, vitaminC, calcium, iron (% daily value, 0-100)'],\n      [''],\n      ['TIPS:'],\n      ['• Keep the header row intact'],\n      ['• Don\\'t change column names'],\n      ['• You can copy/paste from your existing menu data'],\n      ['• Save as .xlsx before uploading']\n    ];\n    const wsInstructions = XLSX.utils.aoa_to_sheet(instructions);\n    \n    // Add sheets to workbook\n    XLSX.utils.book_append_sheet(wb, wsInstructions, \"Instructions\");\n    XLSX.utils.book_append_sheet(wb, ws, \"Menu Template\");\n    \n    // Download file\n    XLSX.writeFile(wb, 'menu_import_template.xlsx');\n  };\n\n  // Parse boolean values\n  const parseBoolean = (value) => {\n    if (typeof value === 'boolean') return value;\n    if (typeof value === 'string') {\n      return value.toUpperCase() === 'TRUE' || value === '1' || value.toUpperCase() === 'YES';\n    }\n    return false;\n  };\n\n  // Parse numeric values\n  const parseNumber = (value, isFloat = false) => {\n    if (value === '' || value === null || value === undefined) return null;\n    const num = isFloat ? parseFloat(value) : parseInt(value);\n    return isNaN(num) ? null : num;\n  };\n\n  // Process imported data\n  const processImportData = (data) => {\n    const errors = [];\n    const validItems = [];\n\n    data.forEach((row, index) => {\n      try {\n        // Skip empty rows\n        if (!row.name || !row.category || !row.price || !row.description) {\n          if (row.name || row.category || row.price || row.description) {\n            errors.push(`Row ${index + 2}: Missing required fields`);\n          }\n          return;\n        }\n\n        // Validate category\n        const validCategories = categories.map(c => c.value);\n        if (!validCategories.includes(row.category)) {\n          errors.push(`Row ${index + 2}: Invalid category \"${row.category}\"`);\n          return;\n        }\n\n        // Parse allergens\n        const allergens = row.allergens ? \n          row.allergens.split(',').map(a => a.trim()).filter(a => a) : [];\n\n        // Create item object\n        const item = {\n          name: row.name,\n          nameAr: row.nameAr || '',\n          category: row.category,\n          price: row.price,\n          priceWithoutVat: row.priceWithoutVat || '',\n          description: row.description,\n          descriptionAr: row.descriptionAr || '',\n          calories: parseNumber(row.calories) || 0,\n          walkMinutes: parseNumber(row.walkMinutes),\n          runMinutes: parseNumber(row.runMinutes),\n          preparationTime: parseNumber(row.preparationTime),\n          servingSize: row.servingSize || '',\n          halal: parseBoolean(row.halal),\n          vegetarian: parseBoolean(row.vegetarian),\n          vegan: parseBoolean(row.vegan),\n          glutenFree: parseBoolean(row.glutenFree),\n          dairyFree: parseBoolean(row.dairyFree),\n          nutFree: parseBoolean(row.nutFree),\n          highSodium: parseBoolean(row.highSodium),\n          containsCaffeine: parseBoolean(row.containsCaffeine),\n          spicyLevel: parseNumber(row.spicyLevel) || 0,\n          allergens: allergens,\n          // Nutrition fields\n          totalFat: parseNumber(row.totalFat, true),\n          saturatedFat: parseNumber(row.saturatedFat, true),\n          transFat: parseNumber(row.transFat, true),\n          cholesterol: parseNumber(row.cholesterol),\n          sodium: parseNumber(row.sodium),\n          totalCarbs: parseNumber(row.totalCarbs, true),\n          dietaryFiber: parseNumber(row.dietaryFiber, true),\n          sugars: parseNumber(row.sugars, true),\n          protein: parseNumber(row.protein, true),\n          vitaminA: parseNumber(row.vitaminA),\n          vitaminC: parseNumber(row.vitaminC),\n          calcium: parseNumber(row.calcium),\n          iron: parseNumber(row.iron)\n        };\n\n        validItems.push(item);\n      } catch (error) {\n        errors.push(`Row ${index + 2}: ${error.message}`);\n      }\n    });\n\n    return { validItems, errors };\n  };\n\n  // Handle file upload\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setUploadFile(file);\n      setImportErrors([]);\n      setImportSuccess(false);\n    }\n  };\n\n  // Handle import\n  const handleImport = async () => {\n    if (!uploadFile) return;\n\n    setImporting(true);\n    setImportErrors([]);\n    setImportSuccess(false);\n\n    try {\n      const reader = new FileReader();\n      \n      reader.onload = async (e) => {\n        try {\n          const data = new Uint8Array(e.target.result);\n          const workbook = XLSX.read(data, { type: 'array' });\n          \n          // Get the first sheet (or \"Menu Template\" sheet if it exists)\n          const sheetName = workbook.SheetNames.includes('Menu Template') ? \n            'Menu Template' : workbook.SheetNames[0];\n          const worksheet = workbook.Sheets[sheetName];\n          \n          // Convert to JSON\n          const jsonData = XLSX.utils.sheet_to_json(worksheet);\n          \n          if (jsonData.length === 0) {\n            setImportErrors(['No data found in the file']);\n            setImporting(false);\n            return;\n          }\n\n          // Process and validate data\n          const { validItems, errors } = processImportData(jsonData);\n          \n          if (errors.length > 0) {\n            setImportErrors(errors);\n          }\n\n          if (validItems.length > 0) {\n            // Import valid items using bulk API\n            try {\n              const response = await menuAPI.bulkCreateMenuItems(validItems);\n              \n              if (response.success && response.count > 0) {\n                setImportSuccess(true);\n                onImportSuccess();\n                \n                // Reset form after success\n                setTimeout(() => {\n                  setUploadFile(null);\n                  setImportSuccess(false);\n                  const fileInput = document.querySelector('input[type=\"file\"]');\n                  if (fileInput) {\n                    fileInput.value = '';\n                  }\n                }, 3000);\n              }\n            } catch (error) {\n              setImportErrors(prev => [...prev, `Bulk import failed: ${error.response?.data?.detail || error.message}`]);\n            }\n          } else if (errors.length === 0) {\n            setImportErrors(['No valid items found to import']);\n          }\n        } catch (error) {\n          setImportErrors([`Failed to read file: ${error.message}`]);\n        } finally {\n          setImporting(false);\n        }\n      };\n\n      reader.readAsArrayBuffer(uploadFile);\n    } catch (error) {\n      setImportErrors([`Upload failed: ${error.message}`]);\n      setImporting(false);\n    }\n  };\n\n  return (\n    <div className=\"bg-white rounded-xl p-6 shadow-lg\">\n      <h2 className=\"text-xl font-playfair font-bold text-primary mb-6\">Import/Export Menu</h2>\n      \n      {/* Download Template */}\n      <div className=\"mb-8\">\n        <h3 className=\"text-lg font-semibold mb-3\">Step 1: Download Template</h3>\n        <p className=\"text-gray-600 mb-4\">\n          Download the Excel template with all required fields and instructions.\n        </p>\n        <button\n          onClick={generateTemplate}\n          className=\"flex items-center gap-2 px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary-dark transition-colors\"\n        >\n          <svg className=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n          </svg>\n          Download Template\n        </button>\n      </div>\n      \n      {/* Upload File */}\n      <div className=\"mb-6\">\n        <h3 className=\"text-lg font-semibold mb-3\">Step 2: Upload Filled Template</h3>\n        <p className=\"text-gray-600 mb-4\">\n          Fill the template with your menu items and upload it here.\n        </p>\n        <div className=\"flex items-center gap-4\">\n          <input\n            type=\"file\"\n            accept=\".xlsx,.xls,.csv\"\n            onChange={handleFileUpload}\n            className=\"flex-1 px-4 py-2 border-2 border-gray-200 rounded-lg focus:border-primary focus:outline-none\"\n          />\n          <button\n            onClick={handleImport}\n            disabled={!uploadFile || importing}\n            className={`px-4 py-2 rounded-lg transition-colors ${\n              uploadFile && !importing\n                ? 'bg-green-600 text-white hover:bg-green-700'\n                : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n            }`}\n          >\n            {importing ? 'Importing...' : 'Import'}\n          </button>\n        </div>\n      </div>\n      \n      {/* Success Message */}\n      {importSuccess && (\n        <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 mb-4\">\n          <p className=\"text-green-700 font-medium\">\n            ✅ Menu items imported successfully!\n          </p>\n        </div>\n      )}\n      \n      {/* Error Messages */}\n      {importErrors.length > 0 && (\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n          <p className=\"text-red-700 font-medium mb-2\">Import Errors:</p>\n          <ul className=\"list-disc list-inside text-sm text-red-600 space-y-1\">\n            {importErrors.map((error, index) => (\n              <li key={index}>{error}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n      \n      {/* Instructions */}\n      <div className=\"mt-8 p-4 bg-gray-50 rounded-lg\">\n        <h4 className=\"font-semibold mb-2\">Quick Guide:</h4>\n        <ul className=\"text-sm text-gray-600 space-y-1\">\n          <li>• Required fields: name, category, price, description, calories</li>\n          <li>• Categories: {categories.map(c => c.value).join(', ')}</li>\n          <li>• Boolean fields: Use TRUE/FALSE</li>\n          <li>• Allergens: Comma-separated (e.g., dairy,nuts,gluten)</li>\n          <li>• Nutrition fields are optional</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default MenuImportExport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}